services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: semantic-search-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: semantic_search
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - semantic-network

  ollama:
    image: ollama/ollama:latest
    container_name: semantic-search-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - semantic-network

  ollama-init:
    image: ollama/ollama:latest
    container_name: semantic-search-ollama-init
    depends_on:
      ollama:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        echo "Waiting for Ollama to be ready..."
        sleep 5
        echo "Pulling nomic-embed-text model..."
        ollama pull nomic-embed-text
        echo "Model ready!"
    environment:
      - OLLAMA_HOST=ollama:11434
    networks:
      - semantic-network
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: semantic-search-app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
      ollama-init:
        condition: service_completed_successfully
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/semantic_search
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    networks:
      - semantic-network
    restart: unless-stopped

networks:
  semantic-network:
    driver: bridge

volumes:
  postgres_data:
  ollama_data: